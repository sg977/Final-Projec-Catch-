{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\PJ McCall\\\\Documents\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\PJ McCall\\\\Documents\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\PJ McCall\\\\Documents\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\PJ McCall\\\\Documents\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\PJ McCall\\\\Documents\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\PJ McCall\\\\Documents\\\\Final-Projec-Catch-\\\\client\\\\src\\\\pages\\\\InstantMessage\\\\InstantMessage.js\";\nimport React, { Component } from 'react';\nimport './InstantMessage.css'; // import msgs from './messages-obj.json';\n\nimport ChatPartner from '../../components/ChatPartner';\nimport MessageSent from '../../components/MessageSent';\nimport MessageRec from '../../components/MessageRec';\nimport MessageText from '../../components/MessageText';\nimport SendButton from '../../components/SendButton';\nimport HookButton from '../../components/HookButton';\nimport API from '../../utils/API';\n\nvar InstantMessage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstantMessage, _Component);\n\n  function InstantMessage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InstantMessage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InstantMessage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      msgs: [],\n      messages: [],\n      inputText: \"\",\n      user: 1,\n      partnerID: \"Chat with Jenny\",\n      parterName: \"\",\n      room: \"5bd16c99b837b3d9cb5c2ff6\",\n      hooked: null,\n      newChat: null,\n      chat: []\n    };\n\n    _this.loadRoomData = function () {\n      API.getRoom(_this.state.room).then(function (res) {\n        return _this.setState({\n          messages: res.data[0].messages,\n          hooked: res.data[0].hooked,\n          user: res.data[0].userOne\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.loadPartnerName = function () {\n      API.getUser(_this.state.partnerID).then(function (res) {\n        return _this.setState({\n          parterName: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.loadPartnerID = function () {\n      API.getRoom(_this.state.room).then(function (res) {\n        return _this.checkUser(res.data[0].userOne, res.data[0].userTwo);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.checkUser = function (a, b) {\n      if (_this.state.user == a) {\n        _this.setState({\n          partnerID: b\n        });\n      } else {\n        _this.setState({\n          partnerID: a\n        });\n      }\n    };\n\n    _this.handleSend = function () {\n      console.log(\"msg sent\");\n      API.addMessage(_this.state.room, {\n        text: _this.state.inputText,\n        senderID: _this.state.user\n      });\n\n      _this.loadRoomData();\n\n      console.log(_this.state.inputText);\n    };\n\n    _this.messageInput = function (event) {\n      _this.setState({\n        inputText: event.target.value\n      });\n    };\n\n    _this.handleHook = function () {\n      if (_this.state.hooked) {\n        _this.setState({\n          hooked: false\n        });\n\n        API.changeStatus(_this.state.room, {\n          hooked: false\n        });\n        console.log(_this.state.room, _this.state.hooked);\n      } else {\n        _this.setState({\n          hooked: true\n        });\n\n        API.changeStatus(_this.state.room, {\n          hooked: true\n        });\n        console.log(_this.state.room, _this.state.hooked);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InstantMessage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Component Mounted\");\n      this.loadRoomData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card main-disp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"partner-disp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ChatPartner, {\n        partner: this.state.partnerID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-body msgs-disp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.messages.map(function (message) {\n        return _this2.state.user === message.senderID ? React.createElement(MessageSent, {\n          text: message.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }) : React.createElement(MessageRec, {\n          text: message.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"input-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(MessageText, {\n        value: this.state.inputText,\n        messageInput: this.messageInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(SendButton, {\n        handleSend: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), this.state.hooked ? React.createElement(HookButton, {\n        handleHook: this.handleHook,\n        hooked: \"Hooked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }) : React.createElement(HookButton, {\n        handleHook: this.handleHook,\n        hooked: \"Unhooked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), console.log(this.state.parterName))));\n    }\n  }]);\n\n  return InstantMessage;\n}(Component);\n\nexport default InstantMessage;","map":{"version":3,"sources":["C:\\Users\\PJ McCall\\Documents\\Final-Projec-Catch-\\client\\src\\pages\\InstantMessage\\InstantMessage.js"],"names":["React","Component","ChatPartner","MessageSent","MessageRec","MessageText","SendButton","HookButton","API","InstantMessage","state","msgs","messages","inputText","user","partnerID","parterName","room","hooked","newChat","chat","loadRoomData","getRoom","then","res","setState","data","userOne","catch","err","console","log","loadPartnerName","getUser","loadPartnerID","checkUser","userTwo","a","b","handleSend","addMessage","text","senderID","messageInput","event","target","value","handleHook","changeStatus","map","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './InstantMessage.css';\n// import msgs from './messages-obj.json';\nimport ChatPartner from '../../components/ChatPartner';\nimport MessageSent from '../../components/MessageSent';\nimport MessageRec from '../../components/MessageRec';\nimport MessageText from '../../components/MessageText';\nimport SendButton from '../../components/SendButton';\nimport HookButton from '../../components/HookButton';\nimport API from '../../utils/API';\n\n\nclass InstantMessage extends Component {\n\n  state = {\n    msgs: [],\n    messages: [],\n    inputText: \"\",\n    user: 1,\n    partnerID: \"Chat with Jenny\",\n    parterName: \"\",\n    room: \"5bd16c99b837b3d9cb5c2ff6\",\n    hooked: null,\n    newChat: null,\n    chat: []\n  }\n\n  componentDidMount() {\n    console.log(\"Component Mounted\");\n    this.loadRoomData();\n  }\n\n  loadRoomData = () => {\n    API.getRoom(this.state.room)\n      .then(res =>\n        this.setState({\n            messages: res.data[0].messages,\n            hooked: res.data[0].hooked,\n            user: res.data[0].userOne,\n            \n          }))\n          .catch(err => console.log(err));\n  };\n\n  loadPartnerName = () => {\n    API.getUser(this.state.partnerID)\n      .then(res => \n        this.setState({\n          parterName: res.data\n        })\n        )\n        .catch(err => console.log(err))\n  }\n\n  loadPartnerID = () => {\n    API.getRoom(this.state.room)\n      .then(res =>\n        this.checkUser(res.data[0].userOne, res.data[0].userTwo)\n        )\n        .catch(err => console.log(err))\n  };\n\n  checkUser = (a, b) => {\n    if(this.state.user == a) {\n      this.setState({\n        partnerID: b\n      })\n    } else {\n      this.setState({\n        partnerID: a\n      })\n    }\n  }\n\n  handleSend = () => {\n    console.log(\"msg sent\");\n    API.addMessage(this.state.room, {text: this.state.inputText, senderID: this.state.user});\n    this.loadRoomData();\n    console.log(this.state.inputText)\n  };\n\n  messageInput = event => {\n    this.setState({\n      inputText: event.target.value\n    });\n  }\n\n  handleHook = () => {\n    if(this.state.hooked) {\n      this.setState({\n        hooked: false\n      })\n      API.changeStatus(this.state.room, {hooked: false})\n      console.log(this.state.room, this.state.hooked)\n    } else {\n      this.setState({\n        hooked: true\n      })\n      API.changeStatus(this.state.room, {hooked: true})\n      console.log(this.state.room, this.state.hooked)\n    }\n  } \n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"card main-disp\">\n          <div className=\"partner-disp\">\n            <ChatPartner \n              partner={this.state.partnerID}\n            />\n            </div>\n          <div className=\"card-body msgs-disp\">\n            {this.state.messages.map(message => \n                this.state.user === message.senderID ? (\n                  <MessageSent\n                    text={message.text}\n                  />\n                ) : (\n                  <MessageRec\n                  text={message.text}\n                />\n                )\n            )}\n          </div>\n          <div className=\"input-area\">\n            <MessageText\n              value={this.state.inputText}\n              messageInput={this.messageInput}\n            />\n            <SendButton \n              handleSend={this.handleSend}\n            />\n            {this.state.hooked ? (  \n              <HookButton      \n                  handleHook={this.handleHook}\n                  hooked={\"Hooked\"}\n                  />) : (\n                  <HookButton      \n                  handleHook={this.handleHook}\n                  hooked={\"Unhooked\"}\n                  />\n                )}\n                {console.log(this.state.parterName)}\n              </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InstantMessage;\n"]},"metadata":{},"sourceType":"module"}