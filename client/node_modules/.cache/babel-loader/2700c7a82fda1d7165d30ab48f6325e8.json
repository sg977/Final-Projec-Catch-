{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\guosi\\\\OneDrive\\\\\\u6587\\u6863\\\\Gitlab_code\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\guosi\\\\OneDrive\\\\\\u6587\\u6863\\\\Gitlab_code\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\guosi\\\\OneDrive\\\\\\u6587\\u6863\\\\Gitlab_code\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\guosi\\\\OneDrive\\\\\\u6587\\u6863\\\\Gitlab_code\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\guosi\\\\OneDrive\\\\\\u6587\\u6863\\\\Gitlab_code\\\\Final-Projec-Catch-\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\guosi\\\\OneDrive\\\\\\u6587\\u6863\\\\Gitlab_code\\\\Final-Projec-Catch-\\\\client\\\\src\\\\components\\\\ImageTesting\\\\ImageTesting.js\";\nimport React from 'react';\nimport \"./ImageTesting.css\";\n\nvar ImageUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageUpload, _React$Component);\n\n  function ImageUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUpload).call(this, props));\n    _this.state = {\n      file: '',\n      imagePreviewUrl: ''\n    };\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"_handleSubmit\",\n    value: function _handleSubmit(e) {\n      e.preventDefault(); // TODO: do something with -> this.state.file\n\n      console.log('handle uploading-', this.state.file);\n    }\n  }, {\n    key: \"_handleDelete\",\n    value: function _handleDelete(e) {\n      e.preventDefault(); //TODO: do something with -> this.state.file\n\n      console.log('handle delete-', this.state.file);\n    }\n  }, {\n    key: \"_handleImageChange\",\n    value: function _handleImageChange(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var reader = new FileReader();\n      var file = e.target.files[0];\n\n      reader.onloadend = function () {\n        _this2.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var imagePreviewUrl = this.state.imagePreviewUrl;\n      var $imagePreview = null;\n\n      if (imagePreviewUrl) {\n        $imagePreview = React.createElement(\"img\", {\n          src: imagePreviewUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      } else {\n        $imagePreview = React.createElement(\"div\", {\n          className: \"previewText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Please select an Image for Preview\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"previewComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this3._handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"fileInput\",\n        type: \"file\",\n        onChange: function onChange(e) {\n          return _this3._handleImageChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this3._handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(\"button\", {\n        className: \"deleteButton\",\n        type: \"delete\",\n        onClick: function onClick(e) {\n          return _this3._handleDelete(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Delete Image\")), React.createElement(\"div\", {\n        className: \"imgPreview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, $imagePreview));\n    }\n  }]);\n\n  return ImageUpload;\n}(React.Component); //   ReactDOM.render(<ImageUpload/>, document.getElementById(\"mainApp\"));\n\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:\\Users\\guosi\\OneDrive\\文档\\Gitlab_code\\Final-Projec-Catch-\\client\\src\\components\\ImageTesting\\ImageTesting.js"],"names":["React","ImageUpload","props","state","file","imagePreviewUrl","e","preventDefault","console","log","reader","FileReader","target","files","onloadend","setState","result","readAsDataURL","$imagePreview","_handleSubmit","_handleImageChange","_handleDelete","Component"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAUC,MAAAA,eAAe,EAAE;AAA3B,KAAb;AAFiB;AAGlB;;;;kCAEaC,C,EAAG;AACfA,MAAAA,CAAC,CAACC,cAAF,GADe,CAEf;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKN,KAAL,CAAWC,IAA5C;AACD;;;kCAEaE,C,EAAG;AACbA,MAAAA,CAAC,CAACC,cAAF,GADa,CAEb;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKN,KAAL,CAAWC,IAAzC;AACH;;;uCAEkBE,C,EAAG;AAAA;;AACpBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIP,IAAI,GAAGE,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAH,MAAAA,MAAM,CAACI,SAAP,GAAmB,YAAM;AACvB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAEA,IADM;AAEZC,UAAAA,eAAe,EAAEK,MAAM,CAACM;AAFZ,SAAd;AAID,OALD;;AAOAN,MAAAA,MAAM,CAACO,aAAP,CAAqBb,IAArB;AACD;;;6BAEQ;AAAA;;AAAA,UACFC,eADE,GACiB,KAAKF,KADtB,CACFE,eADE;AAEP,UAAIa,aAAa,GAAG,IAApB;;AACA,UAAIb,eAAJ,EAAqB;AACnBa,QAAAA,aAAa,GAAI;AAAK,UAAA,GAAG,EAAEb,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACD,OAFD,MAEO;AACLa,QAAAA,aAAa,GAAI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAjB;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,kBAACZ,CAAD;AAAA,iBAAK,MAAI,CAACa,aAAL,CAAmBb,CAAnB,CAAL;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,QAAQ,EAAE,kBAACA,CAAD;AAAA,iBAAK,MAAI,CAACc,kBAAL,CAAwBd,CAAxB,CAAL;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAE,iBAACA,CAAD;AAAA,iBAAK,MAAI,CAACa,aAAL,CAAmBb,CAAnB,CAAL;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAE,iBAACA,CAAD;AAAA,iBAAK,MAAI,CAACe,aAAL,CAAmBf,CAAnB,CAAL;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,aADH,CANF,CADF;AAYD;;;;EAvDqBlB,KAAK,CAACsB,S,GA0DhC;;;AACA,eAAerB,WAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport \"./ImageTesting.css\";\r\n\r\nclass ImageUpload extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {file: '',imagePreviewUrl: ''};\r\n    }\r\n  \r\n    _handleSubmit(e) {\r\n      e.preventDefault();\r\n      // TODO: do something with -> this.state.file\r\n      console.log('handle uploading-', this.state.file);\r\n    }\r\n\r\n    _handleDelete(e) {\r\n        e.preventDefault();\r\n        //TODO: do something with -> this.state.file\r\n        console.log('handle delete-', this.state.file);\r\n    }\r\n  \r\n    _handleImageChange(e) {\r\n      e.preventDefault();\r\n  \r\n      let reader = new FileReader();\r\n      let file = e.target.files[0];\r\n  \r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file,\r\n          imagePreviewUrl: reader.result\r\n        });\r\n      }\r\n  \r\n      reader.readAsDataURL(file)\r\n    }\r\n  \r\n    render() {\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      } else {\r\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n      }\r\n  \r\n      return (\r\n        <div className=\"previewComponent\">\r\n          <form onSubmit={(e)=>this._handleSubmit(e)}>\r\n            <input className=\"fileInput\" type=\"file\" onChange={(e)=>this._handleImageChange(e)} />\r\n            <button className=\"submitButton\" type=\"submit\" onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>\r\n            <button className=\"deleteButton\" type=\"delete\" onClick={(e)=>this._handleDelete(e)}>Delete Image</button>\r\n          </form>\r\n          <div className=\"imgPreview\">\r\n            {$imagePreview}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n    \r\n//   ReactDOM.render(<ImageUpload/>, document.getElementById(\"mainApp\"));\r\nexport default ImageUpload; "]},"metadata":{},"sourceType":"module"}